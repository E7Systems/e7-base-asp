

@model web_mvc.ViewModels.ProjectIndex

@Html.AntiForgeryToken()

<h1>Projects</h1>


<div class="btn-toolbar">
    <div class="btn-group">
        <a href="@Url.Action("Index", new { page = Model.Projects.Page, SortOrder = Model.SortOrder, SortBy = "PlanCheckNumber", SearchBy = "PlanCheckNumber", SearchTerm = Model.SearchTerm })" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-search"></i>Search</></a>
    </div>
    <div class="btn btn-group pull-right">
        @if (Model.Projects.HasPreviousPage)
        {

            <a href="@Url.Action("Index", new {page = Model.Projects.PreviousPage})" class="btn btn-primary btn-sm">
                <i class="glyphicon glyphicon-chevron-left"></i>Previous Page</a>
        }
        else
        {
            <a href="#" class="btn btn-default btn-disabled btn-sm">
                <i class="glyphicon glyphicon-chevron-left"></i>Previous Page</a>
        }
    </div>
    <div class="btn btn-group pull-right">
        @if (Model.Projects.HasNextPage)
        {
            <a href="@Url.Action("Index", new {page = Model.Projects.NextPage})" class="btn btn-primary btn-sm">
                Next Page<i class="glyphicon glyphicon-chevron-right"></i></a>
        }
        else
        {
            <a href="#" class="btn btn-default btn-disabled btn-sm">Next Page
                Next Page<i class="glyphicon glyphicon-chevron-right"></i></a>
        }
    </div>
    <div class="btn btn-group pull-right">
        <a href="@Url.Action("Create")" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-plus"></i>Create Project</a>
    </div>
</div>

<table class="table table-striped">
    <thead>
        <tr>  @*this can be done in a loop when I write a method that spits out property names as a property*@
            <th><a href="@Url.Action("Index", new {page = Model.Projects.Page, SortOrder=Model.SortOrder, SortBy="Address", SearchBy="Address", SearchTerm=Model.SearchTerm})">Address</a></th>
            <th><a href="@Url.Action("Index", new { page = Model.Projects.Page, SortOrder = Model.SortOrder, SortBy = "APN", SearchBy = "APN", SearchTerm = Model.SearchTerm })">APN</a></th>
            <th><a href="@Url.Action("Index", new { page = Model.Projects.Page, SortOrder = Model.SortOrder, SortBy = "ProjectName", SearchBy = "ProjectName", SearchTerm = Model.SearchTerm })">Project Name</a></th>
            <th><a href="@Url.Action("Index", new { page = Model.Projects.Page, SortOrder = Model.SortOrder, SortBy = "PlanCheckNumber", SearchBy = "PlanCheckNumber", SearchTerm = Model.SearchTerm })">Plan Check Number</a></th>
            <th><a href="@Url.Action("Index", new { page = Model.Projects.Page, SortOrder = Model.SortOrder, SortBy = "Notes", SearchBy = "Notes", SearchTerm = Model.SearchTerm })">Notes</a></th>
        </tr>
        <tr>
            @for (int i = 0; i < 5; i++)
            {
                <th><input type="text" /></th>
            }
        </tr>
    </thead>
    @foreach (var project in Model.Projects)
    {
        <tr>
            <td> @project.Address</td>
            <td> @project.APN</td>
            <td> @project.ProjectName</td>
            <td> @project.PlanCheckNumber</td>
            <td> @project.Notes</td>
            <td><a href="@Url.Action("Edit", new {project.ProjectID})" class="btn btn-primary btn-xs">Edit<i class="glyphicon glyphicon-edit"></i></a></td>
            <td><a href="@Url.Action("Delete", new {project.ProjectID})" data-post="Are you sure you want to delete this Project?" class="btn btn-primary btn-xs">Delete<i class="glyphicon glyphicon-trash"></i></a></td>
        </tr>
    }

</table>

@*move this into a dedicated scripts folder after the infrastructure is fully fleshed out*@
@section Scripts                                            
{
    <script>
        $(document).ready(                                      //after document is ready
            function ()
            {                      
                $("a[data-post]").                              //look for all anchor tags that have our custom data-post attribute
                    click(function (e)                          //when clicked
                    {
                        e.preventDefault();                     //prevent navigating to original href

                        var $this = $(this);
                        var message = $this.data("post");       //extract message

                        if (message && !confirm(message))       //if no confirm, return
                            return;

                     $("<form>")                                //create form
                    .attr("method", "post")                     //to be posted
                    .attr("action", $this.attr("href"))         //to original href
                    .appendTo(document.body)                    //append it to existing document
                    .submit();                                  //and post it
                    })
            });
    </script>
}